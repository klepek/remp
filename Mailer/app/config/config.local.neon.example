services:
    # All console commands you need to use should be registered here
    # This is a set that we recommend to use
    console:
        setup:
            - register(Remp\MailerModule\Commands\SyncUserSubscriptionsCommand())
            - register(Remp\MailerModule\Commands\MailgunEventsCommand())
            # If you're using Beam, you can enable this command to pull conversions from there
			# - register(Remp\MailerModule\Commands\ProcessConversionStatsCommand())

    embedParser:
        setup:
            - setVideoLinkText("Click to play video")
    articleLocker:
        setup:
            - setLockText("Exclusive content")
            - setupLockLink("Registration", "https://www.demosite.com/registration")

    # Setup loggers output
    commandsLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/commands.log"))
    mailProcessLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/mail_process_job.log"))
    hermesLogger:
        setup:
            - pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/hermes.log"))
            - pushHandler(Monolog\Handler\ErrorLogHandler())

    # This is a reference IUser implementation.
    # You should make your own implementation against your CRM system and register it here.
    - Remp\MailerModule\User\Dummy

    # To be able to send an email, you need to provide at least one ISegment implementation
    # You should make your own implementation against your CRM system and register it here.
    segmentAgreggator:
        setup:
            - register(Remp\MailerModule\Segment\Dummy())
#            - register(Remp\MailerModule\Segment\Beam(%remp.beam.segments_addr%))
#            - register(Remp\MailerModule\Segment\Pythia(%remp.pythia.segments_addr%))

#    - Remp\MailerModule\Tracker\Remp(%remp.beam.tracker_addr%, %remp.beam.tracker_property_token%)
#    eventEmitter:
#        class: League\Event\Emitter
#        setup:
#            - addListener(Remp\MailerModule\Events\MailSentEvent, Remp\MailerModule\Events\MailSentHandler())

    # If you're using Beam and want to use ProcessConversionStatsCommand, enable this repository (it's a dependency)
#    - Remp\MailerModule\Repository\BeamConversionsRepository

# local_configs override DBs configs records.
local_configs:

    # Configuring usage of mailhog for local development
    remp_mailermodule_mailer_smtpmailer_host: mailhog
    remp_mailermodule_mailer_smtpmailer_port: 1025
    remp_mailermodule_mailer_smtpmailer_username: ''
    remp_mailermodule_mailer_smtpmailer_password: ''
    remp_mailermodule_mailer_smtpmailer_secure: ''
